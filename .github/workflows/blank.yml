# This is a basic workflow to help you get started with Actions

name: vc-erp

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: chmod +x gradlew

      - name: build
        run: ./gradlew build

      - name: run tests
        run: ./gradlew test

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: build/libs/*.jar

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  deploy:
    environment: key
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: result
      - name: Make pem file
        run: |
          echo "$KEY" >> $HOME/key.pem
          chmod 400 $HOME/key.pem
        env:
          KEY: ${{secrets.KEY}}
      - name: SCP transfer
        run: scp -i $HOME/key.pem -o StrictHostKeyChecking=no *.jar ${{ secrets.USER }}@${{ secrets.IP }}:~/
      - name: Execute remote commands
        run: |
          ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.IP }} "sudo fuser -k 8080/tcp"
          ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.IP }} "sudo nohup java -jar ~/*.jar &"
